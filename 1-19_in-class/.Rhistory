setwd("C:/Users/samha/Documents/Chicago Booth/Classwork/Winter 2023/Quant Marketing Seminar/Data")
yogdata <- read.csv("yogurt.csv")
###PART 2
temp <- list()
for (i in 1:nrow(yogdata)-1) {
if (yogdata[i+1,"PanelistFirstObs"] == 1) {
temp <- append(temp, 1)
}
else {
temp <- append(temp, 0)
}
}
temp <- unlist(append(temp, 0))
temp <- temp[2:length(temp)]
yogdata$lag <- temp
l1cu <- 0
l2cu <- 0
objective <- function(x) {
a1_1 = x[1]
a2_1 = x[2]
a3_1 = x[3]
bf_1 = x[4]
bp_1 = x[5]
a1_2 = x[6]
a2_2 = x[7]
a3_2 = x[8]
bf_2 = x[9]
bp_2 = x[10]
phi = x[11]
pi = exp(phi)/(1+exp(phi))
expv1_1 = exp(a1_1 + bf_1*yogdata[,"Feature.1"] + bp_1*yogdata[,"Price.1"])
expv2_1 = exp(a2_1 + bf_1*yogdata[,"Feature.2"] + bp_1*yogdata[,"Price.2"])
expv3_1 = exp(a3_1 + bf_1*yogdata[,"Feature.3"] + bp_1*yogdata[,"Price.3"])
expv4_1 = exp(bf_1*yogdata[,"Feature.4"] + bp_1*yogdata[,"Price.4"])
expv1_2 = exp(a1_2 + bf_2*yogdata[,"Feature.1"] + bp_2*yogdata[,"Price.1"])
expv2_2 = exp(a2_2 + bf_2*yogdata[,"Feature.2"] + bp_2*yogdata[,"Price.2"])
expv3_2 = exp(a3_2 + bf_2*yogdata[,"Feature.3"] + bp_2*yogdata[,"Price.3"])
expv4_2 = exp(bf_2*yogdata[,"Feature.4"] + bp_2*yogdata[,"Price.4"])
prob1_1 = expv1_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob2_1 = expv2_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob3_1 = expv3_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob4_1 = expv4_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob1_2 = expv1_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob2_2 = expv2_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob3_2 = expv3_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob4_2 = expv4_2/(expv1_2+expv2_2+expv3_2+expv4_2)
probc_1 = (prob1_1^yogdata[,"Brand.1"])*(prob2_1^yogdata[,"Brand..2"])*(prob3_1^yogdata[,"Brand.3"])*(prob4_1^yogdata[,"Brand.4"])
probc_2 = (prob1_2^yogdata[,"Brand.1"])*(prob2_2^yogdata[,"Brand..2"])*(prob3_2^yogdata[,"Brand.3"])*(prob4_2^yogdata[,"Brand.4"])
lloop1 <- list()
lloop2 <- list()
lloop1[yogdata[,"PanelistFirstObs"]==1] <-
log(probc_1[yogdata[,"PanelistFirstObs"]==1])
lloop2[yogdata[,"PanelistFirstObs"]==1] <-
log(probc_2[yogdata[,"PanelistFirstObs"]==1])
l_1 <- unlist(lloop1)
l_2 <- unlist(lloop2)
groupl1 <- list()
groupl2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"lag"]==1) {
groupl1 <- append(groupl1, l_1[i])
groupl2 <- append(groupl2, l_2[i])
}
else {
groupl1 <- append(groupl1, 1)
groupl2 <- append(groupl2, 1)
}
}
group_1 <- unlist(groupl1)
group_2 <- unlist(groupl2)
lnp <- log((pi*group_1)+((1-pi)*group_2))
ll <- sum(lnp)
return(ll)
}
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
#I think my dataset is already fine, so here's some visualizations in prep
for (i in 1:(ncol(optdata)-2)) {
ggplot(optdata, aes(choice, both_blc)) + geom_bar(stat="identity")
}
library(tidyverse)
setwd("C:/Users/samha/Documents/GitHub/Optimality-Bias/1-19_in-class")
optdata <- read.csv("1-19_in-class_CLEANED DATASHEET.csv") %>% select(-1)
#I think my dataset is already fine, so here's some visualizations in prep
for (i in 1:(ncol(optdata)-2)) {
ggplot(optdata, aes(choice, both_blc)) + geom_bar(stat="identity")
}
#I think my dataset is already fine, so here's some visualizations in prep
ggplot(optdata, aes(choice, both_blc)) + geom_bar(stat="identity")
ggplot(optdata, aes(expert, both_blc)) + geom_bar(stat="identity")
hist(optdata$expert)
hist(optdata$both_blc)
hist(optdata[optdata$expert==1]$both_blc)
optdata[optdata$expert==1]
hist(optdata[optdata$expert=="Expert"]$both_blc)
optdata[optdata$expert=="Expert"
hist(optdata[optdata$expert]=="Expert"]$both_blc)
optdata[optdata$expert=="Expert"]
optdata$expert=="Expert"
optdata[optdata$expert=="Expert"]
optdata["True"]
optdata[TRUE]
optdata %>% hist(filter(expert=="Expert")$both_blc)
optdata %>% filter(expert=="Expert")
optdata %>% filter(expert=="Expert")
expertonly <- optdata %>% filter(expert=="Expert")
hist(expertonly$both_blc)
#I think my dataset is already fine, so here's some visualizations in prep
ggplot(optdata, aes(choice, both_blc)) + geom_bar(stat="identity")
ggplot(optdata, aes(expert, both_blc)) + geom_bar(stat="identity")
expertonly <- optdata %>% filter(expert=="Expert")
hist(expertonly$both_blc)
noviceonly <- optdata %>% filter(expert=="Non-expert")
hist(noviceonly$both_blc)
hist(expertonly$both_blc)
noviceonly <- optdata %>% filter(expert=="Non-expert")
hist(noviceonly$both_blc)
##Latent Class Logit - 2 Segment
l1cu <- 0
l2cu <- 0
objective <- function(x) {
a1_1 = x[1]
a2_1 = x[2]
a3_1 = x[3]
bf_1 = x[4]
bp_1 = x[5]
a1_2 = x[6]
a2_2 = x[7]
a3_2 = x[8]
bf_2 = x[9]
bp_2 = x[10]
phi = x[11]
pi = exp(phi)/(1+exp(phi))
expv1_1 = exp(a1_1 + bf_1*yogdata[,"Feature.1"] + bp_1*yogdata[,"Price.1"])
expv2_1 = exp(a2_1 + bf_1*yogdata[,"Feature.2"] + bp_1*yogdata[,"Price.2"])
expv3_1 = exp(a3_1 + bf_1*yogdata[,"Feature.3"] + bp_1*yogdata[,"Price.3"])
expv4_1 = exp(bf_1*yogdata[,"Feature.4"] + bp_1*yogdata[,"Price.4"])
expv1_2 = exp(a1_2 + bf_2*yogdata[,"Feature.1"] + bp_2*yogdata[,"Price.1"])
expv2_2 = exp(a2_2 + bf_2*yogdata[,"Feature.2"] + bp_2*yogdata[,"Price.2"])
expv3_2 = exp(a3_2 + bf_2*yogdata[,"Feature.3"] + bp_2*yogdata[,"Price.3"])
expv4_2 = exp(bf_2*yogdata[,"Feature.4"] + bp_2*yogdata[,"Price.4"])
prob1_1 = expv1_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob2_1 = expv2_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob3_1 = expv3_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob4_1 = expv4_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob1_2 = expv1_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob2_2 = expv2_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob3_2 = expv3_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob4_2 = expv4_2/(expv1_2+expv2_2+expv3_2+expv4_2)
probc_1 = (prob1_1^yogdata[,"Brand.1"])*(prob2_1^yogdata[,"Brand..2"])*(prob3_1^yogdata[,"Brand.3"])*(prob4_1^yogdata[,"Brand.4"])
probc_2 = (prob1_2^yogdata[,"Brand.1"])*(prob2_2^yogdata[,"Brand..2"])*(prob3_2^yogdata[,"Brand.3"])*(prob4_2^yogdata[,"Brand.4"])
lloop1 <- list()
lloop2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"PanelistFirstObs"]==1) {
lloop1 <- append(lloop1, probc_1[i])
l1cu <- probc_1[i]
lloop2 <- append(lloop2, probc_2[i])
l2cu <- probc_2[i]
}
else {
lloop1 <- append(lloop1, probc_1[i]*l1cu)
l1cu <- probc_1[i]*l1cu
lloop2 <- append(lloop2, probc_2[i]*l2cu)
l2cu <- probc_2[i]*l2cu
}
}
l_1 <- unlist(lloop1)
l_2 <- unlist(lloop2)
groupl1 <- list()
groupl2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"lag"]==1) {
groupl1 <- append(groupl1, l_1[i])
groupl2 <- append(groupl2, l_2[i])
}
else {
groupl1 <- append(groupl1, 1)
groupl2 <- append(groupl2, 1)
}
}
group_1 <- unlist(groupl1)
group_2 <- unlist(groupl2)
lnp <- log((pi*group_1)+((1-pi)*group_2))
ll <- sum(lnp)
return(ll)
}
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
result <- optim(par=start, fn=objective, control = list(fnscale=-1),
method="L-BFGS-B", lower = c(-Inf, -Inf, -Inf, 0, -Inf, -Inf, -Inf, -Inf, 0, -Inf, 0),
upper = c(Inf, Inf, Inf, Inf, 0, Inf, Inf, Inf, Inf, 0, 1), hessian=TRUE)
result$par
View(result)
plot(expertonly$both_pkc, expertonly$both_exp)
plot(noviceonly$both_pkc, noviceonly$both_exp)
data <- data.frame(A = c(1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0))
# Use rle() to find the runs of consecutive identical values
rle_data <- rle(data$A)
# Use cumsum() to create a new column that starts with each 1 value
data$new_col <- cumsum(rle_data$values * rle_data$lengths)
# Replace the last value of new_col with zero
data$new_col[nrow(data)] <- 0
View(data)
View(rle_data)
data <- data.frame(A = c(1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0),
B = c(0.5, 0.3, 0.3, 0.1, 0.6, 0.2, 0.5, 0.3, 0.3, 0.1, 0.6, 0.2))
# Use rle() to find the runs of consecutive identical values
rle_data <- rle(data$A)
# Use cumsum() to create a new column that starts with each 1 value
data$new_col <- cumsum(rle_data$values * rle_data$lengths)
# Replace the last value of new_col with zero
data$new_col[nrow(data)] <- 0
View(rle_data)
View(data)
# Use rle() to find the runs of consecutive identical values
rle_dataA <- rle(data$A)
rle_dataB <- rle(data$B)
# Use cumsum() to create a new column that starts with each 1 value
data$new_col <- cumsum(rle_dataB$values * rle_dataA$lengths)
View(rle_dataA)
View(rle_dataB)
View(rle_dataA)
cor(expertonly$both_pkc, expertonly$both_exp)
plot(expertonly$both_pkc, expertonly$both_exp)
cor(expertonly$both_pkc, expertonly$both_exp)
cor(expertonly$both_pkc, expertonly$both_exp)
plot(noviceonly$both_pkc, noviceonly$both_exp)
cor(noviceonly$both_pkc, noviceonly$both_exp)
cor.plot(expertonly$both_pkc, expertonly$both_exp)
corr.plot(expertonly$both_pkc, expertonly$both_exp)
cor.test(expertonly$both_pkc, expertonly$both_exp)
cor.test(noviceonly$both_pkc, noviceonly$both_exp)
cor.test(expertonly$both_pkc, expertonly$both_exp)
plot(noviceonly$both_pkc, noviceonly$both_exp)
cor.test(noviceonly$both_pkc, noviceonly$both_exp)
hist(optdata$both_exp)
ggplot(optdata, aes(expert, both_exp)) + geom_bar(stat="identity")
ggplot(expertonly, aes(expert, both_exp)) + geom_bar(stat="identity")
optdata
ggplot(optdata, aes(expert, both_exp)) + geom_bar(stat="identity")
ggplot(optdata, aes(choice, both_exp)) + geom_bar(stat="identity")
plot(expertonly$both_pkc, expertonly$both_exp)
cor.test(expertonly$both_pkc, expertonly$both_exp)
plot(noviceonly$both_pkc, noviceonly$both_exp)
cor.test(noviceonly$both_pkc, noviceonly$both_exp)
cor.test(expertonly$both_pkc, expertonly$both_exp)
##Latent Class Logit - 1 Segment
objective <- function(x) {
a1 = x[1]
a2 = x[2]
a3 = x[3]
bf = x[4]
bp = x[5]
phi = x[6]
expv1 = exp(a1 + bf*yogdata[,"Feature.1"] + bp*yogdata[,"Price.1"])
expv2 = exp(a2 + bf*yogdata[,"Feature.2"] + bp*yogdata[,"Price.2"])
expv3 = exp(a3 + bf*yogdata[,"Feature.3"] + bp*yogdata[,"Price.3"])
expv4 = exp(bf*yogdata[,"Feature.4"] + bp*yogdata[,"Price.4"])
prob1 = expv1/(expv1+expv2+expv3+expv4)
prob2 = expv2/(expv1+expv2+expv3+expv4)
prob3 = expv3/(expv1+expv2+expv3+expv4)
prob4 = expv4/(expv1+expv2+expv3+expv4)
probc = (prob1^yogdata[,"Brand.1"])*(prob2^yogdata[,"Brand..2"])*(prob3^yogdata[,"Brand.3"])*(prob4^yogdata[,"Brand.4"])
lnp = log(probc)
ll <- sum(lnp)
return(ll)
}
start <- c(0,0,0,0.1,-10, 0.5)
objective(start)
result <- optim(par=start, fn=objective, control = list(fnscale=-1),
method="L-BFGS-B", lower = c(-Inf, -Inf, -Inf, -Inf, -Inf, 0),
upper = c(Inf, Inf, Inf, Inf, Inf, 1), hessian=TRUE)
result$par
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
objective(start)
result <- optim(par=start, fn=objective, control = list(fnscale=-1),
method="L-BFGS-B", lower = c(-Inf, -Inf, -Inf, 0, -Inf, -Inf, -Inf, -Inf, 0, -Inf, 0),
upper = c(Inf, Inf, Inf, Inf, 0, Inf, Inf, Inf, Inf, 0, 1), hessian=TRUE)
result$par
result <- optim(par=start, fn=objective, control = list(fnscale=-1),
method="L-BFGS-B", lower = c(-Inf, -Inf, -Inf, 0, -Inf, -Inf, -Inf, -Inf, 0, -Inf, 0),
upper = c(Inf, Inf, Inf, Inf, 0, Inf, Inf, Inf, Inf, 0, 1), hessian=TRUE)
result$par
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
result <- optim(par=start, fn=objective, control = list(fnscale=-1),
method="L-BFGS-B", lower = c(-Inf, -Inf, -Inf, 0, -Inf, -Inf, -Inf, -Inf, 0, -Inf, 0),
upper = c(Inf, Inf, Inf, Inf, 0, Inf, Inf, Inf, Inf, 0, 1), hessian=TRUE)
result$par
##Latent Class Logit - 2 Segment
l1cu <- 0
l2cu <- 0
objective <- function(x) {
a1_1 = x[1]
a2_1 = x[2]
a3_1 = x[3]
bf_1 = x[4]
bp_1 = x[5]
a1_2 = x[6]
a2_2 = x[7]
a3_2 = x[8]
bf_2 = x[9]
bp_2 = x[10]
phi = x[11]
pi = exp(phi)/(1+exp(phi))
expv1_1 = exp(a1_1 + bf_1*yogdata[,"Feature.1"] + bp_1*yogdata[,"Price.1"])
expv2_1 = exp(a2_1 + bf_1*yogdata[,"Feature.2"] + bp_1*yogdata[,"Price.2"])
expv3_1 = exp(a3_1 + bf_1*yogdata[,"Feature.3"] + bp_1*yogdata[,"Price.3"])
expv4_1 = exp(bf_1*yogdata[,"Feature.4"] + bp_1*yogdata[,"Price.4"])
expv1_2 = exp(a1_2 + bf_2*yogdata[,"Feature.1"] + bp_2*yogdata[,"Price.1"])
expv2_2 = exp(a2_2 + bf_2*yogdata[,"Feature.2"] + bp_2*yogdata[,"Price.2"])
expv3_2 = exp(a3_2 + bf_2*yogdata[,"Feature.3"] + bp_2*yogdata[,"Price.3"])
expv4_2 = exp(bf_2*yogdata[,"Feature.4"] + bp_2*yogdata[,"Price.4"])
prob1_1 = expv1_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob2_1 = expv2_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob3_1 = expv3_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob4_1 = expv4_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob1_2 = expv1_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob2_2 = expv2_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob3_2 = expv3_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob4_2 = expv4_2/(expv1_2+expv2_2+expv3_2+expv4_2)
probc_1 = (prob1_1^yogdata[,"Brand.1"])*(prob2_1^yogdata[,"Brand..2"])*(prob3_1^yogdata[,"Brand.3"])*(prob4_1^yogdata[,"Brand.4"])
probc_2 = (prob1_2^yogdata[,"Brand.1"])*(prob2_2^yogdata[,"Brand..2"])*(prob3_2^yogdata[,"Brand.3"])*(prob4_2^yogdata[,"Brand.4"])
lloop1 <- list()
lloop2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"PanelistFirstObs"]==1) {
lloop1 <- append(lloop1, probc_1[i])
l1cu <- probc_1[i]
lloop2 <- append(lloop2, probc_2[i])
l2cu <- probc_2[i]
}
else {
lloop1 <- append(lloop1, probc_1[i]*l1cu)
l1cu <- probc_1[i]*l1cu
lloop2 <- append(lloop2, probc_2[i]*l2cu)
l2cu <- probc_2[i]*l2cu
}
}
l_1 <- unlist(lloop1)
l_2 <- unlist(lloop2)
groupl1 <- list()
groupl2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"lag"]==1) {
groupl1 <- append(groupl1, l_1[i])
groupl2 <- append(groupl2, l_2[i])
}
else {
groupl1 <- append(groupl1, 1)
groupl2 <- append(groupl2, 1)
}
}
group_1 <- unlist(groupl1)
group_2 <- unlist(groupl2)
lnp <- log((pi*group_1)+((1-pi)*group_2))
ll <- sum(lnp)
return(ll)
}
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
##Latent Class Logit - 2 Segment
l1cu <- 1
l2cu <- 1
objective <- function(x) {
a1_1 = x[1]
a2_1 = x[2]
a3_1 = x[3]
bf_1 = x[4]
bp_1 = x[5]
a1_2 = x[6]
a2_2 = x[7]
a3_2 = x[8]
bf_2 = x[9]
bp_2 = x[10]
phi = x[11]
pi = exp(phi)/(1+exp(phi))
expv1_1 = exp(a1_1 + bf_1*yogdata[,"Feature.1"] + bp_1*yogdata[,"Price.1"])
expv2_1 = exp(a2_1 + bf_1*yogdata[,"Feature.2"] + bp_1*yogdata[,"Price.2"])
expv3_1 = exp(a3_1 + bf_1*yogdata[,"Feature.3"] + bp_1*yogdata[,"Price.3"])
expv4_1 = exp(bf_1*yogdata[,"Feature.4"] + bp_1*yogdata[,"Price.4"])
expv1_2 = exp(a1_2 + bf_2*yogdata[,"Feature.1"] + bp_2*yogdata[,"Price.1"])
expv2_2 = exp(a2_2 + bf_2*yogdata[,"Feature.2"] + bp_2*yogdata[,"Price.2"])
expv3_2 = exp(a3_2 + bf_2*yogdata[,"Feature.3"] + bp_2*yogdata[,"Price.3"])
expv4_2 = exp(bf_2*yogdata[,"Feature.4"] + bp_2*yogdata[,"Price.4"])
prob1_1 = expv1_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob2_1 = expv2_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob3_1 = expv3_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob4_1 = expv4_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob1_2 = expv1_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob2_2 = expv2_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob3_2 = expv3_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob4_2 = expv4_2/(expv1_2+expv2_2+expv3_2+expv4_2)
probc_1 = (prob1_1^yogdata[,"Brand.1"])*(prob2_1^yogdata[,"Brand..2"])*(prob3_1^yogdata[,"Brand.3"])*(prob4_1^yogdata[,"Brand.4"])
probc_2 = (prob1_2^yogdata[,"Brand.1"])*(prob2_2^yogdata[,"Brand..2"])*(prob3_2^yogdata[,"Brand.3"])*(prob4_2^yogdata[,"Brand.4"])
lloop1 <- list()
lloop2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"PanelistFirstObs"]==1) {
lloop1 <- append(lloop1, probc_1[i])
l1cu <- probc_1[i]
lloop2 <- append(lloop2, probc_2[i])
l2cu <- probc_2[i]
}
else {
lloop1 <- append(lloop1, probc_1[i]*l1cu)
l1cu <- probc_1[i]*l1cu
lloop2 <- append(lloop2, probc_2[i]*l2cu)
l2cu <- probc_2[i]*l2cu
}
}
l_1 <- unlist(lloop1)
l_2 <- unlist(lloop2)
groupl1 <- list()
groupl2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"lag"]==1) {
groupl1 <- append(groupl1, l_1[i])
groupl2 <- append(groupl2, l_2[i])
}
else {
groupl1 <- append(groupl1, 1)
groupl2 <- append(groupl2, 1)
}
}
group_1 <- unlist(groupl1)
group_2 <- unlist(groupl2)
lnp <- log((pi*group_1)+((1-pi)*group_2))
ll <- sum(lnp)
return(ll)
}
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
##Latent Class Logit - 2 Segment
l1cu <- 1
l2cu <- 1
objective <- function(x) {
a1_1 = x[1]
a2_1 = x[2]
a3_1 = x[3]
bf_1 = x[4]
bp_1 = x[5]
a1_2 = x[6]
a2_2 = x[7]
a3_2 = x[8]
bf_2 = x[9]
bp_2 = x[10]
phi = x[11]
pi = exp(phi)/(1+exp(phi))
expv1_1 = exp(a1_1 + bf_1*yogdata[,"Feature.1"] + bp_1*yogdata[,"Price.1"])
expv2_1 = exp(a2_1 + bf_1*yogdata[,"Feature.2"] + bp_1*yogdata[,"Price.2"])
expv3_1 = exp(a3_1 + bf_1*yogdata[,"Feature.3"] + bp_1*yogdata[,"Price.3"])
expv4_1 = exp(bf_1*yogdata[,"Feature.4"] + bp_1*yogdata[,"Price.4"])
expv1_2 = exp(a1_2 + bf_2*yogdata[,"Feature.1"] + bp_2*yogdata[,"Price.1"])
expv2_2 = exp(a2_2 + bf_2*yogdata[,"Feature.2"] + bp_2*yogdata[,"Price.2"])
expv3_2 = exp(a3_2 + bf_2*yogdata[,"Feature.3"] + bp_2*yogdata[,"Price.3"])
expv4_2 = exp(bf_2*yogdata[,"Feature.4"] + bp_2*yogdata[,"Price.4"])
prob1_1 = expv1_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob2_1 = expv2_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob3_1 = expv3_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob4_1 = expv4_1/(expv1_1+expv2_1+expv3_1+expv4_1)
prob1_2 = expv1_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob2_2 = expv2_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob3_2 = expv3_2/(expv1_2+expv2_2+expv3_2+expv4_2)
prob4_2 = expv4_2/(expv1_2+expv2_2+expv3_2+expv4_2)
probc_1 = (prob1_1^yogdata[,"Brand.1"])*(prob2_1^yogdata[,"Brand..2"])*(prob3_1^yogdata[,"Brand.3"])*(prob4_1^yogdata[,"Brand.4"])
probc_2 = (prob1_2^yogdata[,"Brand.1"])*(prob2_2^yogdata[,"Brand..2"])*(prob3_2^yogdata[,"Brand.3"])*(prob4_2^yogdata[,"Brand.4"])
lloop1 <- list()
lloop2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"PanelistFirstObs"]==1) {
lloop1 <- append(lloop1, probc_1[i])
l1cu <- probc_1[i]
lloop2 <- append(lloop2, probc_2[i])
l2cu <- probc_2[i]
}
else {
lloop1 <- append(lloop1, probc_1[i]*l1cu)
l1cu <- probc_1[i]*l1cu
lloop2 <- append(lloop2, probc_2[i]*l2cu)
l2cu <- probc_2[i]*l2cu
}
}
l_1 <- unlist(lloop1)
l_2 <- unlist(lloop2)
groupl1 <- list()
groupl2 <- list()
for (i in 1:nrow(yogdata)) {
if (yogdata[i,"lag"]==1) {
groupl1 <- append(groupl1, l_1[i])
groupl2 <- append(groupl2, l_2[i])
}
else {
groupl1 <- append(groupl1, 1)
groupl2 <- append(groupl2, 1)
}
}
group_1 <- unlist(groupl1)
group_2 <- unlist(groupl2)
lnp <- log((pi*group_1)+((1-pi)*group_2))
ll <- sum(lnp)
return(ll)
}
start <- c(1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,1.3877279,0.6434791,-3.0862132,0.4874838,-37.0580798,0.5)
objective(start)
result <- optim(par=start, fn=objective, control = list(fnscale=-1),
method="L-BFGS-B", lower = c(-Inf, -Inf, -Inf, 0, -Inf, -Inf, -Inf, -Inf, 0, -Inf, 0),
upper = c(Inf, Inf, Inf, Inf, 0, Inf, Inf, Inf, Inf, 0, 1), hessian=TRUE)
result$par
View(result)
